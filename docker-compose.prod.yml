# Comando para levantar contenedor sin cache de imagenes:
# docker compose -f docker-compose.yml build --no-cache
# docker compose up -d
# docker compose -f <nombreArchivo>.yml up -d

version: '3'

networks:
  dnpap:
    name: dnpap
    driver: bridge

services:
  mysql:
    image: mysql:latest
    container_name: mysql-prod-c
    hostname: mysql
    restart: always
    environment:
      # Password for root access
      MYSQL_ROOT_PASSWORD: '12345'
      allowPublicKeyRetrieval: True
      TZ: 'America/Guatemala'
    networks:
      - dnpap
    ports:
      - '3306:3306'
    volumes:
      - dnpap-mysql-db-prod:/var/lib/mysql
    command: ['mysqld', '--default-time-zone=America/Guatemala']

  backend:
    image: backend-prod-i
    container_name: backend-prod-c
    hostname: backend
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    networks:
      - dnpap
    ports:
      - 5000:5000
    env_file:
      - .env.prod
    depends_on:
      - mysql

  frontend:
    image: frontend-prod-i
    container_name: frontend-prod-c
    hostname: frontend
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        # La ip debe ser la del servidor donde se encuentra el backend (no localhost)
        - VITE_BACKEND_URL=http://64.23.135.40:5000
    networks:
      - dnpap
    ports:
      - 8080:8080
    stdin_open: true
    tty: true
    depends_on:
      - backend
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "0.15"
    #       memory: 250M
    #     # Recusos dedicados, mantiene los recursos disponibles del host para el contenedor
    #     reservations:
    #       cpus: "0.1"
    #       memory: 128M


volumes:
  dnpap-mysql-db-prod: